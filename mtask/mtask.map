
Se asignan símbolos comunes
Símbolo común       tamaño            fichero

mt_int_level        0x4               obj/irq.o
mt_last_task        0x4               obj/kernel.o
mt_fpu_task         0x4               obj/kernel.o
mt_curr_task        0x4               obj/kernel.o
mt_ticks            0x8               obj/kernel.o

Secciones de salida descartadas

 .note.GNU-stack
                0x0000000000000000        0x0 obj/kernel.o
 .note.GNU-stack
                0x0000000000000000        0x0 obj/gdt_idt.o
 .note.GNU-stack
                0x0000000000000000        0x0 obj/irq.o
 .note.GNU-stack
                0x0000000000000000        0x0 obj/string.o
 .note.GNU-stack
                0x0000000000000000        0x0 obj/sprintf.o
 .note.GNU-stack
                0x0000000000000000        0x0 obj/malloc.o
 .note.GNU-stack
                0x0000000000000000        0x0 obj/cons.o
 .note.GNU-stack
                0x0000000000000000        0x0 obj/timer.o
 .note.GNU-stack
                0x0000000000000000        0x0 obj/queue.o
 .note.GNU-stack
                0x0000000000000000        0x0 obj/math.o
 .note.GNU-stack
                0x0000000000000000        0x0 obj/sem.o
 .note.GNU-stack
                0x0000000000000000        0x0 obj/mutex.o
 .note.GNU-stack
                0x0000000000000000        0x0 obj/monitor.o
 .note.GNU-stack
                0x0000000000000000        0x0 obj/pipe.o
 .note.GNU-stack
                0x0000000000000000        0x0 obj/msgqueue.o
 .note.GNU-stack
                0x0000000000000000        0x0 obj/rand.o
 .note.GNU-stack
                0x0000000000000000        0x0 obj/filo.o
 .note.GNU-stack
                0x0000000000000000        0x0 obj/sfilo.o
 .note.GNU-stack
                0x0000000000000000        0x0 obj/xfilo.o
 .note.GNU-stack
                0x0000000000000000        0x0 obj/keyboard.o
 .note.GNU-stack
                0x0000000000000000        0x0 obj/printk.o
 .note.GNU-stack
                0x0000000000000000        0x0 obj/getline.o
 .note.GNU-stack
                0x0000000000000000        0x0 obj/shell.o
 .note.GNU-stack
                0x0000000000000000        0x0 obj/split.o
 .note.GNU-stack
                0x0000000000000000        0x0 obj/setkb.o
 .note.GNU-stack
                0x0000000000000000        0x0 obj/camino.o
 .note.GNU-stack
                0x0000000000000000        0x0 obj/camino_ns.o
 .note.GNU-stack
                0x0000000000000000        0x0 obj/atoi.o
 .note.GNU-stack
                0x0000000000000000        0x0 obj/prodcons.o
 .note.GNU-stack
                0x0000000000000000        0x0 obj/afilo.o
 .note.GNU-stack
                0x0000000000000000        0x0 obj/divz.o
 .note.GNU-stack
                0x0000000000000000        0x0 obj/multiterminal.o

Configuración de la Memoria

Nombre           Origen             Longitud           Atributos
*default*        0x0000000000000000 0xffffffffffffffff

Guión del enlazador y mapa de memoria

La dirección de la sección .text-segment se estableció a 0x100000
LOAD obj/kstart.o
LOAD obj/libasm.o
LOAD obj/interrupts.o
LOAD obj/kernel.o
LOAD obj/gdt_idt.o
LOAD obj/irq.o
LOAD obj/string.o
LOAD obj/sprintf.o
LOAD obj/malloc.o
LOAD obj/cons.o
LOAD obj/io.o
LOAD obj/timer.o
LOAD obj/queue.o
LOAD obj/math.o
LOAD obj/sem.o
LOAD obj/mutex.o
LOAD obj/monitor.o
LOAD obj/pipe.o
LOAD obj/msgqueue.o
LOAD obj/rand.o
LOAD obj/filo.o
LOAD obj/sfilo.o
LOAD obj/xfilo.o
LOAD obj/keyboard.o
LOAD obj/printk.o
LOAD obj/getline.o
LOAD obj/shell.o
LOAD obj/split.o
LOAD obj/setkb.o
LOAD obj/camino.o
LOAD obj/camino_ns.o
LOAD obj/atoi.o
LOAD obj/prodcons.o
LOAD obj/afilo.o
LOAD obj/divz.o
LOAD obj/multiterminal.o
                0x0000000000100000                PROVIDE (__executable_start, 0x100000)
                0x00000000001000d4                . = (0x100000 + SIZEOF_HEADERS)

.interp
 *(.interp)

.note.gnu.build-id
                0x00000000001000d4       0x24
 *(.note.gnu.build-id)
 .note.gnu.build-id
                0x00000000001000d4       0x24 obj/kstart.o

.hash
 *(.hash)

.gnu.hash
 *(.gnu.hash)

.dynsym
 *(.dynsym)

.dynstr
 *(.dynstr)

.gnu.version
 *(.gnu.version)

.gnu.version_d
 *(.gnu.version_d)

.gnu.version_r
 *(.gnu.version_r)

.rel.dyn        0x00000000001000f8        0x0
 *(.rel.init)
 *(.rel.text .rel.text.* .rel.gnu.linkonce.t.*)
 .rel.text      0x0000000000000000        0x0 obj/kstart.o
 *(.rel.fini)
 *(.rel.rodata .rel.rodata.* .rel.gnu.linkonce.r.*)
 *(.rel.data.rel.ro .rel.data.rel.ro.* .rel.gnu.linkonce.d.rel.ro.*)
 *(.rel.data .rel.data.* .rel.gnu.linkonce.d.*)
 .rel.data      0x0000000000000000        0x0 obj/kstart.o
 *(.rel.tdata .rel.tdata.* .rel.gnu.linkonce.td.*)
 *(.rel.tbss .rel.tbss.* .rel.gnu.linkonce.tb.*)
 *(.rel.ctors)
 *(.rel.dtors)
 *(.rel.got)
 *(.rel.bss .rel.bss.* .rel.gnu.linkonce.b.*)
 *(.rel.ifunc)

.rel.plt        0x00000000001000f8        0x0
 *(.rel.plt)
                0x00000000001000f8                PROVIDE (__rel_iplt_start, .)
 *(.rel.iplt)
 .rel.iplt      0x0000000000000000        0x0 obj/kstart.o
                0x00000000001000f8                PROVIDE (__rel_iplt_end, .)

.init
 *(SORT(.init))

.plt            0x0000000000100100        0x0
 *(.plt)
 *(.iplt)
 .iplt          0x0000000000000000        0x0 obj/kstart.o

.text           0x0000000000100100     0x912f
 *(.text.unlikely .text.*_unlikely)
 *(.text.exit .text.exit.*)
 *(.text.startup .text.startup.*)
 *(.text.hot .text.hot.*)
 *(.text .stub .text.* .gnu.linkonce.t.*)
 .text          0x0000000000100100       0x1a obj/kstart.o
                0x000000000010010c                _start
 *fill*         0x000000000010011a        0x6 
 .text          0x0000000000100120       0x80 obj/libasm.o
                0x0000000000100120                mt_load_gdt
                0x0000000000100152                mt_load_idt
                0x000000000010015a                mt_context_switch
                0x000000000010017b                mt_sti
                0x000000000010017d                mt_cli
                0x000000000010017f                mt_finit
                0x0000000000100183                mt_fsave
                0x000000000010018b                mt_frstor
                0x0000000000100193                mt_stts
                0x000000000010019d                mt_clts
 .text          0x00000000001001a0      0x380 obj/interrupts.o
                0x00000000001001a0                mt_int_stubs
 .text          0x0000000000100520      0xeed obj/kernel.o
                0x0000000000100520                Malloc
                0x0000000000100574                StrDup
                0x00000000001005d8                Free
                0x00000000001006a9                CreateTask
                0x00000000001007aa                DeleteTask
                0x0000000000100875                CurrentTask
                0x000000000010087f                CurrentTty
                0x000000000010088c                Panic
                0x00000000001008c7                Pause
                0x00000000001008dc                Yield
                0x00000000001008f1                Delay
                0x000000000010095d                Exit
                0x0000000000100972                Suspend
                0x00000000001009a6                Ready
                0x00000000001009d0                GetPriority
                0x00000000001009db                SetPriority
                0x0000000000100a3c                SetTty
                0x0000000000100a5a                SetData
                0x0000000000100a75                SetSwitcher
                0x0000000000100a8f                CreateQueue
                0x0000000000100ab9                DeleteQueue
                0x0000000000100aec                WaitQueue
                0x0000000000100b07                WaitQueueTimed
                0x0000000000100b85                SignalQueue
                0x0000000000100bcd                FlushQueue
                0x0000000000100c1b                Send
                0x0000000000100c44                SendCond
                0x0000000000100c6d                SendTimed
                0x0000000000100db7                Receive
                0x0000000000100de0                ReceiveCond
                0x0000000000100e09                ReceiveTimed
                0x0000000000100fd1                mt_select_task
                0x0000000000101187                Atomic
                0x000000000010119a                Unatomic
                0x00000000001011d2                DisableInts
                0x00000000001011f6                RestoreInts
                0x0000000000101229                mt_main
 *fill*         0x000000000010140d        0x3 
 .text          0x0000000000101410      0x10b obj/gdt_idt.o
                0x0000000000101509                mt_setup_gdt_idt
 *fill*         0x000000000010151b        0x1 
 .text          0x000000000010151c      0x38a obj/irq.o
                0x00000000001016be                mt_int_handler
                0x000000000010170f                mt_setup_interrupts
                0x000000000010175e                mt_set_int_handler
                0x000000000010177d                mt_set_exception_handler
                0x000000000010179c                mt_disable_irq
                0x000000000010181f                mt_enable_irq
 *fill*         0x00000000001018a6        0x2 
 .text          0x00000000001018a8      0x3d8 obj/string.o
                0x00000000001018a8                strcpy
                0x00000000001018df                strncpy
                0x0000000000101923                strcat
                0x0000000000101972                strncat
                0x00000000001019ca                strcmp
                0x0000000000101a07                strncmp
                0x0000000000101a53                strchr
                0x0000000000101a90                strrchr
                0x0000000000101acf                strlen
                0x0000000000101b03                strnlen
                0x0000000000101b3d                memcpy
                0x0000000000101b8c                memmove
                0x0000000000101c0d                memchr
                0x0000000000101c4f                memset
 .text          0x0000000000101c80     0x1557 obj/sprintf.o
                0x0000000000101f69                ecvtbuf
                0x0000000000101fac                fcvtbuf
                0x0000000000102c91                vsprintf
                0x00000000001031aa                sprintf
 *fill*         0x00000000001031d7        0x1 
 .text          0x00000000001031d8      0x204 obj/malloc.o
                0x00000000001031d8                free
                0x00000000001032fc                malloc
 .text          0x00000000001033dc      0x5b7 obj/cons.o
                0x0000000000103577                mt_cons_changeTty
                0x000000000010358f                mt_cons_clear
                0x00000000001035da                mt_cons_clreol
                0x0000000000103648                mt_cons_clreom
                0x00000000001036a7                mt_cons_nrows
                0x00000000001036b1                mt_cons_ncols
                0x00000000001036bb                mt_cons_nscrolls
                0x00000000001036c8                mt_cons_getxy
                0x00000000001036f0                mt_cons_gotoxy
                0x000000000010371f                mt_cons_setattr
                0x0000000000103747                mt_cons_getattr
                0x0000000000103777                mt_cons_cursor
                0x0000000000103812                mt_cons_putc
                0x000000000010388c                mt_cons_puts
                0x00000000001038b5                mt_cons_cr
                0x00000000001038ce                mt_cons_nl
                0x00000000001038f5                mt_cons_tab
                0x0000000000103934                mt_cons_bs
                0x0000000000103975                mt_cons_raw
 *fill*         0x0000000000103993        0xd 
 .text          0x00000000001039a0       0x18 obj/io.o
                0x00000000001039a0                inb
                0x00000000001039ab                outb
 .text          0x00000000001039b8       0x69 obj/timer.o
                0x00000000001039b8                mt_setup_timer
 *fill*         0x0000000000103a21        0x3 
 .text          0x0000000000103a24      0x3f9 obj/queue.o
                0x0000000000103a24                mt_enqueue
                0x0000000000103b0a                mt_dequeue
                0x0000000000103b92                mt_peeklast
                0x0000000000103b9d                mt_getlast
                0x0000000000103c0d                mt_enqueue_time
                0x0000000000103d0b                mt_dequeue_time
                0x0000000000103da7                mt_peekfirst_time
                0x0000000000103db1                mt_getfirst_time
 *fill*         0x0000000000103e1d        0x3 
 .text          0x0000000000103e20       0x95 obj/math.o
                0x0000000000103e99                mt_setup_math
 *fill*         0x0000000000103eb5        0x3 
 .text          0x0000000000103eb8      0x147 obj/sem.o
                0x0000000000103eb8                CreateSem
                0x0000000000103eeb                DeleteSem
                0x0000000000103f0c                WaitSem
                0x0000000000103f27                WaitSemCond
                0x0000000000103f42                WaitSemTimed
                0x0000000000103f94                SignalSem
                0x0000000000103fc5                ValueSem
                0x0000000000103fcf                FlushSem
 *fill*         0x0000000000103fff        0x1 
 .text          0x0000000000104000      0x140 obj/mutex.o
                0x0000000000104000                CreateMutex
                0x0000000000104033                DeleteMutex
                0x0000000000104054                EnterMutex
                0x000000000010406f                EnterMutexCond
                0x000000000010408a                EnterMutexTimed
                0x00000000001040ef                LeaveMutex
 .text          0x0000000000104140      0x25a obj/monitor.o
                0x0000000000104140                CreateMonitor
                0x0000000000104173                DeleteMonitor
                0x0000000000104194                EnterMonitor
                0x00000000001041af                EnterMonitorCond
                0x00000000001041ca                EnterMonitorTimed
                0x000000000010421c                LeaveMonitor
                0x0000000000104255                CreateCondition
                0x0000000000104288                DeleteCondition
                0x00000000001042a9                WaitCondition
                0x00000000001042c4                WaitConditionTimed
                0x000000000010432e                SignalCondition
                0x0000000000104360                BroadcastCondition
 *fill*         0x000000000010439a        0x2 
 .text          0x000000000010439c      0x3ee obj/pipe.o
                0x000000000010439c                CreatePipe
                0x0000000000104483                DeletePipe
                0x00000000001044cd                GetPipe
                0x00000000001044f6                GetPipeCond
                0x000000000010451f                GetPipeTimed
                0x0000000000104622                PutPipe
                0x000000000010464b                PutPipeCond
                0x0000000000104674                PutPipeTimed
                0x000000000010477f                AvailPipe
 *fill*         0x000000000010478a        0x2 
 .text          0x000000000010478c      0x415 obj/msgqueue.o
                0x00000000001048a0                CreateMsgQueue
                0x00000000001049ca                DeleteMsgQueue
                0x0000000000104a35                GetMsgQueue
                0x0000000000104a57                GetMsgQueueCond
                0x0000000000104a79                GetMsgQueueTimed
                0x0000000000104ade                PutMsgQueue
                0x0000000000104b00                PutMsgQueueCond
                0x0000000000104b22                PutMsgQueueTimed
                0x0000000000104b8b                AvailMsgQueue
 *fill*         0x0000000000104ba1        0x3 
 .text          0x0000000000104ba4       0xb0 obj/rand.o
                0x0000000000104c33                rand
                0x0000000000104c47                srand
 .text          0x0000000000104c54      0x5bf obj/filo.o
                0x0000000000105055                phil_main
 *fill*         0x0000000000105213        0x1 
 .text          0x0000000000105214      0x547 obj/sfilo.o
                0x00000000001055a7                simple_phil_main
 *fill*         0x000000000010575b        0x1 
 .text          0x000000000010575c      0x61b obj/xfilo.o
                0x0000000000105bab                extra_phil_main
 *fill*         0x0000000000105d77        0x1 
 .text          0x0000000000105d78      0x53b obj/keyboard.o
                0x000000000010615e                mt_kbd_getch_timed
                0x0000000000106181                mt_kbd_getch
                0x000000000010619d                mt_kbd_init
                0x000000000010623e                mt_kbd_getlayout
                0x0000000000106248                mt_kbd_setlayout
                0x00000000001062a9                mt_kbd_layouts
 *fill*         0x00000000001062b3        0x1 
 .text          0x00000000001062b4       0xfd obj/printk.o
                0x00000000001062b4                vprintk
                0x000000000010632b                printk
                0x0000000000106351                cprintk
 *fill*         0x00000000001063b1        0x3 
 .text          0x00000000001063b4      0x135 obj/getline.o
                0x00000000001063b4                mt_getline
 *fill*         0x00000000001064e9        0x3 
 .text          0x00000000001064ec      0x27c obj/shell.o
                0x00000000001064ec                shell_main
 .text          0x0000000000106768      0x34f obj/split.o
                0x00000000001067bd                setfs
                0x00000000001067e5                split
                0x0000000000106993                separate
 *fill*         0x0000000000106ab7        0x1 
 .text          0x0000000000106ab8       0xee obj/setkb.o
                0x0000000000106ab8                setkb_main
 *fill*         0x0000000000106ba6        0x2 
 .text          0x0000000000106ba8      0x928 obj/camino.o
                0x0000000000107330                camino_main
 .text          0x00000000001074d0      0xade obj/camino_ns.o
                0x0000000000107e32                camino_ns_main
 *fill*         0x0000000000107fae        0x2 
 .text          0x0000000000107fb0       0xa6 obj/atoi.o
                0x0000000000107fb0                atoi
 *fill*         0x0000000000108056        0x2 
 .text          0x0000000000108058      0x4d5 obj/prodcons.o
                0x00000000001082e5                prodcons_main
 *fill*         0x000000000010852d        0x3 
 .text          0x0000000000108530      0x5ab obj/afilo.o
                0x0000000000108952                atomic_phil_main
 *fill*         0x0000000000108adb        0x1 
 .text          0x0000000000108adc       0xf5 obj/divz.o
                0x0000000000108b1a                divz_main
 *fill*         0x0000000000108bd1        0x3 
 .text          0x0000000000108bd4      0x65b obj/multiterminal.o
                0x0000000000108bd4                mt_mtty_init
                0x0000000000108d38                changeTty
                0x0000000000108db8                getVidmem
                0x0000000000108dd9                getOffset
                0x0000000000108dfa                setCur_x
                0x0000000000108e1f                getRealCur_x
                0x0000000000108e6f                getCur_x
                0x0000000000108e90                decCur_x
                0x0000000000108ec6                setCur_y
                0x0000000000108eeb                getRealCur_y
                0x0000000000108f4a                getCur_y
                0x0000000000108f6b                incCur_y
                0x0000000000108fa1                incCur_x
                0x0000000000108fd7                decCur_y
                0x000000000010900d                getCursor_On
                0x000000000010902e                setCursor_On
                0x0000000000109053                setCur_attr
                0x0000000000109078                getCur_attr
                0x0000000000109099                getScrolls
                0x00000000001090ba                incScrolls
                0x00000000001090f0                getRaw
                0x0000000000109111                setRaw
                0x0000000000109136                putty
                0x0000000000109199                putIntottyKbd
                0x00000000001091c8                getFromttyKbd
                0x00000000001091f8                getFromttyKbdTimed
 *(.gnu.warning)

.fini
 *(SORT(.fini))
                0x000000000010922f                PROVIDE (__etext, .)
                0x000000000010922f                PROVIDE (_etext, .)
                0x000000000010922f                PROVIDE (etext, .)

.rodata         0x0000000000109230      0x985
 *(.rodata .rodata.* .gnu.linkonce.r.*)
 .rodata        0x0000000000109230       0xf0 obj/kernel.o
 .rodata        0x0000000000109320       0x55 obj/irq.o
 *fill*         0x0000000000109375        0x3 
 .rodata        0x0000000000109378      0x188 obj/sprintf.o
 .rodata        0x0000000000109500       0x29 obj/mutex.o
 *fill*         0x0000000000109529        0x3 
 .rodata        0x000000000010952c       0xff obj/monitor.o
 .rodata        0x000000000010962b        0xe obj/pipe.o
 *fill*         0x0000000000109639        0x3 
 .rodata        0x000000000010963c       0x2f obj/msgqueue.o
 *fill*         0x000000000010966b        0x1 
 .rodata        0x000000000010966c       0x4e obj/filo.o
 *fill*         0x00000000001096ba        0x2 
 .rodata        0x00000000001096bc       0x4e obj/sfilo.o
 *fill*         0x000000000010970a        0x2 
 .rodata        0x000000000010970c       0x4e obj/xfilo.o
 .rodata        0x000000000010975a       0x24 obj/keyboard.o
 .rodata        0x000000000010977e        0xf obj/getline.o
 .rodata        0x000000000010978d       0xbb obj/shell.o
 .rodata        0x0000000000109848        0x1 obj/split.o
 *fill*         0x0000000000109849        0x3 
 .rodata        0x000000000010984c       0x62 obj/setkb.o
 *fill*         0x00000000001098ae        0x2 
 .rodata        0x00000000001098b0       0x88 obj/camino.o
 .rodata        0x0000000000109938       0xa0 obj/camino_ns.o
 .rodata        0x00000000001099d8      0x116 obj/prodcons.o
 *fill*         0x0000000000109aee        0x2 
 .rodata        0x0000000000109af0       0x4e obj/afilo.o
 *fill*         0x0000000000109b3e        0x2 
 .rodata        0x0000000000109b40       0x6b obj/divz.o
 .rodata        0x0000000000109bab        0xa obj/multiterminal.o

.rodata1
 *(.rodata1)

.eh_frame_hdr   0x0000000000109bb8      0x9c4
 *(.eh_frame_hdr)
 .eh_frame_hdr  0x0000000000109bb8      0x9c4 obj/kernel.o

.eh_frame       0x000000000010a57c     0x27b8
 *(.eh_frame)
 .eh_frame      0x000000000010a57c      0x5cc obj/kernel.o
 .eh_frame      0x000000000010ab48       0x60 obj/gdt_idt.o
                                         0x78 (tamaño antes de la relajación)
 .eh_frame      0x000000000010aba8      0x148 obj/irq.o
                                        0x160 (tamaño antes de la relajación)
 .eh_frame      0x000000000010acf0      0x264 obj/string.o
                                        0x27c (tamaño antes de la relajación)
 .eh_frame      0x000000000010af54      0x1d8 obj/sprintf.o
                                        0x1f0 (tamaño antes de la relajación)
 .eh_frame      0x000000000010b12c       0x60 obj/malloc.o
                                         0x78 (tamaño antes de la relajación)
 .eh_frame      0x000000000010b18c      0x2c0 obj/cons.o
                                        0x2d8 (tamaño antes de la relajación)
 .eh_frame      0x000000000010b44c       0x20 obj/timer.o
                                         0x38 (tamaño antes de la relajación)
 .eh_frame      0x000000000010b46c      0x100 obj/queue.o
                                        0x118 (tamaño antes de la relajación)
 .eh_frame      0x000000000010b56c       0x44 obj/math.o
                                         0x5c (tamaño antes de la relajación)
 .eh_frame      0x000000000010b5b0      0x100 obj/sem.o
                                        0x118 (tamaño antes de la relajación)
 .eh_frame      0x000000000010b6b0       0xc0 obj/mutex.o
                                         0xd8 (tamaño antes de la relajación)
 .eh_frame      0x000000000010b770      0x180 obj/monitor.o
                                        0x198 (tamaño antes de la relajación)
 .eh_frame      0x000000000010b8f0      0x120 obj/pipe.o
                                        0x138 (tamaño antes de la relajación)
 .eh_frame      0x000000000010ba10      0x160 obj/msgqueue.o
                                        0x178 (tamaño antes de la relajación)
 .eh_frame      0x000000000010bb70       0x60 obj/rand.o
                                         0x78 (tamaño antes de la relajación)
 .eh_frame      0x000000000010bbd0      0x184 obj/filo.o
                                        0x19c (tamaño antes de la relajación)
 .eh_frame      0x000000000010bd54      0x164 obj/sfilo.o
                                        0x17c (tamaño antes de la relajación)
 .eh_frame      0x000000000010beb8      0x184 obj/xfilo.o
                                        0x19c (tamaño antes de la relajación)
 .eh_frame      0x000000000010c03c      0x15c obj/keyboard.o
                                        0x174 (tamaño antes de la relajación)
 .eh_frame      0x000000000010c198       0x60 obj/printk.o
                                         0x78 (tamaño antes de la relajación)
 .eh_frame      0x000000000010c1f8       0x20 obj/getline.o
                                         0x38 (tamaño antes de la relajación)
 .eh_frame      0x000000000010c218       0x20 obj/shell.o
                                         0x38 (tamaño antes de la relajación)
 .eh_frame      0x000000000010c238       0xc0 obj/split.o
                                         0xd8 (tamaño antes de la relajación)
 .eh_frame      0x000000000010c2f8       0x20 obj/setkb.o
                                         0x38 (tamaño antes de la relajación)
 .eh_frame      0x000000000010c318      0x1fc obj/camino.o
                                        0x214 (tamaño antes de la relajación)
 .eh_frame      0x000000000010c514      0x1bc obj/camino_ns.o
                                        0x1d4 (tamaño antes de la relajación)
 .eh_frame      0x000000000010c6d0       0x24 obj/atoi.o
                                         0x3c (tamaño antes de la relajación)
 .eh_frame      0x000000000010c6f4      0x114 obj/prodcons.o
                                        0x12c (tamaño antes de la relajación)
 .eh_frame      0x000000000010c808      0x184 obj/afilo.o
                                        0x19c (tamaño antes de la relajación)
 .eh_frame      0x000000000010c98c       0x60 obj/divz.o
                                         0x78 (tamaño antes de la relajación)
 .eh_frame      0x000000000010c9ec      0x348 obj/multiterminal.o
                                        0x360 (tamaño antes de la relajación)

.gcc_except_table
 *(.gcc_except_table .gcc_except_table.*)

.exception_ranges
 *(.exception_ranges .exception_ranges*)
                0x000000000010cd34                . = (ALIGN (0x1000) - ((0x1000 - .) & 0xfff))
                0x000000000010e000                . = DATA_SEGMENT_ALIGN (0x1000, 0x1000)

.eh_frame
 *(.eh_frame)

.gcc_except_table
 *(.gcc_except_table .gcc_except_table.*)

.exception_ranges
 *(.exception_ranges .exception_ranges*)

.tdata
 *(.tdata .tdata.* .gnu.linkonce.td.*)

.tbss
 *(.tbss .tbss.* .gnu.linkonce.tb.*)
 *(.tcommon)

.preinit_array  0x000000000010e000        0x0
                0x000000000010e000                PROVIDE (__preinit_array_start, .)
 *(.preinit_array)
                0x000000000010e000                PROVIDE (__preinit_array_end, .)

.init_array     0x000000000010e000        0x0
                0x000000000010e000                PROVIDE (__init_array_start, .)
 *(SORT(.init_array.*) SORT(.ctors.*))
 *(.init_array)
 *(EXCLUDE_FILE(*crtend?.o *crtend.o *crtbegin?.o *crtbegin.o) .ctors)
                0x000000000010e000                PROVIDE (__init_array_end, .)

.fini_array     0x000000000010e000        0x0
                0x000000000010e000                PROVIDE (__fini_array_start, .)
 *(SORT(.fini_array.*) SORT(.dtors.*))
 *(.fini_array)
 *(EXCLUDE_FILE(*crtend?.o *crtend.o *crtbegin?.o *crtbegin.o) .dtors)
                0x000000000010e000                PROVIDE (__fini_array_end, .)

.ctors
 *crtbegin.o(.ctors)
 *crtbegin?.o(.ctors)
 *(EXCLUDE_FILE(*crtend?.o *crtend.o) .ctors)
 *(SORT(.ctors.*))
 *(.ctors)

.dtors
 *crtbegin.o(.dtors)
 *crtbegin?.o(.dtors)
 *(EXCLUDE_FILE(*crtend?.o *crtend.o) .dtors)
 *(SORT(.dtors.*))
 *(.dtors)

.jcr
 *(.jcr)

.data.rel.ro
 *(.data.rel.ro.local* .gnu.linkonce.d.rel.ro.local.*)
 *(.data.rel.ro .data.rel.ro.* .gnu.linkonce.d.rel.ro.*)

.dynamic
 *(.dynamic)

.got
 *(.got)
 *(.igot)
                0x000000000010e000                . = DATA_SEGMENT_RELRO_END (., (SIZEOF (.got.plt) >= 0xc)?0xc:0x0)

.got.plt        0x000000000010e000        0x0
 *(.got.plt)
 *(.igot.plt)
 .igot.plt      0x0000000000000000        0x0 obj/kstart.o

.data           0x000000000010e000      0xe90
 *(.data .data.* .gnu.linkonce.d.*)
 .data          0x000000000010e000        0x0 obj/kernel.o
 .data          0x000000000010e000       0x18 obj/gdt_idt.o
 .data          0x000000000010e018        0x0 obj/irq.o
 .data          0x000000000010e018        0x0 obj/string.o
 .data          0x000000000010e018        0x8 obj/sprintf.o
 .data          0x000000000010e020        0x0 obj/malloc.o
 .data          0x000000000010e020        0x0 obj/cons.o
 .data          0x000000000010e020        0x0 obj/timer.o
 .data          0x000000000010e020        0x0 obj/queue.o
 .data          0x000000000010e020        0x0 obj/math.o
 .data          0x000000000010e020        0x0 obj/sem.o
 .data          0x000000000010e020        0x0 obj/mutex.o
 .data          0x000000000010e020        0x0 obj/monitor.o
 .data          0x000000000010e020        0x0 obj/pipe.o
 .data          0x000000000010e020        0x0 obj/msgqueue.o
 .data          0x000000000010e020        0x4 obj/rand.o
 *fill*         0x000000000010e024       0x1c 
 .data          0x000000000010e040       0x50 obj/filo.o
 *fill*         0x000000000010e090       0x10 
 .data          0x000000000010e0a0       0x50 obj/sfilo.o
 *fill*         0x000000000010e0f0       0x10 
 .data          0x000000000010e100       0x50 obj/xfilo.o
 *fill*         0x000000000010e150       0x10 
 .data          0x000000000010e160      0xc20 obj/keyboard.o
                0x000000000010e160                keymap_us_std
                0x000000000010e760                keymap_spanish
 .data          0x000000000010ed80        0x0 obj/printk.o
 .data          0x000000000010ed80        0x0 obj/getline.o
 .data          0x000000000010ed80       0x58 obj/shell.o
 .data          0x000000000010edd8        0xc obj/split.o
 .data          0x000000000010ede4        0x0 obj/setkb.o
 .data          0x000000000010ede4        0x4 obj/camino.o
 .data          0x000000000010ede8        0x4 obj/camino_ns.o
 .data          0x000000000010edec        0x0 obj/atoi.o
 *fill*         0x000000000010edec       0x14 
 .data          0x000000000010ee00       0x40 obj/prodcons.o
 .data          0x000000000010ee40       0x50 obj/afilo.o
 .data          0x000000000010ee90        0x0 obj/divz.o
 .data          0x000000000010ee90        0x0 obj/multiterminal.o

.data1
 *(.data1)
                0x000000000010ee90                _edata = .
                0x000000000010ee90                PROVIDE (edata, .)
                0x000000000010ee90                . = .
                0x000000000010ee90                __bss_start = .

.bss            0x000000000010eea0   0x8087ec
 *(.dynbss)
 *(.bss .bss.* .gnu.linkonce.b.*)
 .bss           0x000000000010eea0     0x4000 obj/kstart.o
 .bss           0x0000000000112ea0        0x6 obj/libasm.o
 *fill*         0x0000000000112ea6        0x2 
 .bss           0x0000000000112ea8     0x4014 obj/interrupts.o
 *fill*         0x0000000000116ebc        0x4 
 .bss           0x0000000000116ec0       0x80 obj/kernel.o
 .bss           0x0000000000116f40      0x180 obj/gdt_idt.o
 .bss           0x00000000001170c0       0xc0 obj/irq.o
 .bss           0x0000000000117180        0x0 obj/string.o
 .bss           0x0000000000117180        0x0 obj/sprintf.o
 .bss           0x0000000000117180   0x800010 obj/malloc.o
 *fill*         0x0000000000917190       0x10 
 .bss           0x00000000009171a0       0xa4 obj/cons.o
 .bss           0x0000000000917244        0x0 obj/timer.o
 .bss           0x0000000000917244        0xc obj/queue.o
 .bss           0x0000000000917250        0x0 obj/math.o
 .bss           0x0000000000917250        0x0 obj/sem.o
 .bss           0x0000000000917250        0x0 obj/mutex.o
 .bss           0x0000000000917250        0x0 obj/monitor.o
 .bss           0x0000000000917250        0x0 obj/pipe.o
 .bss           0x0000000000917250        0x0 obj/msgqueue.o
 .bss           0x0000000000917250        0x0 obj/rand.o
 .bss           0x0000000000917250       0x2c obj/filo.o
 .bss           0x000000000091727c       0x1c obj/sfilo.o
 .bss           0x0000000000917298       0x40 obj/xfilo.o
 *fill*         0x00000000009172d8        0x8 
 .bss           0x00000000009172e0       0xe8 obj/keyboard.o
 .bss           0x00000000009173c8        0x0 obj/printk.o
 .bss           0x00000000009173c8        0x0 obj/getline.o
 .bss           0x00000000009173c8        0x0 obj/shell.o
 .bss           0x00000000009173c8        0x0 obj/split.o
 .bss           0x00000000009173c8        0x0 obj/setkb.o
 *fill*         0x00000000009173c8       0x18 
 .bss           0x00000000009173e0       0x8c obj/camino.o
 *fill*         0x000000000091746c       0x14 
 .bss           0x0000000000917480       0x88 obj/camino_ns.o
 .bss           0x0000000000917508        0x0 obj/atoi.o
 *fill*         0x0000000000917508       0x18 
 .bss           0x0000000000917520       0x64 obj/prodcons.o
 .bss           0x0000000000917584       0x3c obj/afilo.o
 .bss           0x00000000009175c0        0x0 obj/divz.o
 .bss           0x00000000009175c0       0xac obj/multiterminal.o
 *(COMMON)
 *fill*         0x000000000091766c        0x4 
 COMMON         0x0000000000917670       0x18 obj/kernel.o
                0x0000000000917670                mt_last_task
                0x0000000000917674                mt_fpu_task
                0x0000000000917678                mt_curr_task
                0x0000000000917680                mt_ticks
 COMMON         0x0000000000917688        0x4 obj/irq.o
                0x0000000000917688                mt_int_level
                0x000000000091768c                . = ALIGN ((. != 0x0)?0x4:0x1)
                0x000000000091768c                . = ALIGN (0x4)
                0x000000000091768c                . = ALIGN (0x4)
                0x000000000091768c                _end = .
                0x000000000091768c                PROVIDE (end, .)
                0x000000000091768c                . = DATA_SEGMENT_END (.)

.stab
 *(.stab)

.stabstr
 *(.stabstr)

.stab.excl
 *(.stab.excl)

.stab.exclstr
 *(.stab.exclstr)

.stab.index
 *(.stab.index)

.stab.indexstr
 *(.stab.indexstr)

.comment        0x0000000000000000       0x2a
 *(.comment)
 .comment       0x0000000000000000       0x2a obj/kernel.o
                                         0x2b (tamaño antes de la relajación)
 .comment       0x0000000000000000       0x2b obj/gdt_idt.o
 .comment       0x0000000000000000       0x2b obj/irq.o
 .comment       0x0000000000000000       0x2b obj/string.o
 .comment       0x0000000000000000       0x2b obj/sprintf.o
 .comment       0x0000000000000000       0x2b obj/malloc.o
 .comment       0x0000000000000000       0x2b obj/cons.o
 .comment       0x0000000000000000       0x2b obj/timer.o
 .comment       0x0000000000000000       0x2b obj/queue.o
 .comment       0x0000000000000000       0x2b obj/math.o
 .comment       0x0000000000000000       0x2b obj/sem.o
 .comment       0x0000000000000000       0x2b obj/mutex.o
 .comment       0x0000000000000000       0x2b obj/monitor.o
 .comment       0x0000000000000000       0x2b obj/pipe.o
 .comment       0x0000000000000000       0x2b obj/msgqueue.o
 .comment       0x0000000000000000       0x2b obj/rand.o
 .comment       0x0000000000000000       0x2b obj/filo.o
 .comment       0x0000000000000000       0x2b obj/sfilo.o
 .comment       0x0000000000000000       0x2b obj/xfilo.o
 .comment       0x0000000000000000       0x2b obj/keyboard.o
 .comment       0x0000000000000000       0x2b obj/printk.o
 .comment       0x0000000000000000       0x2b obj/getline.o
 .comment       0x0000000000000000       0x2b obj/shell.o
 .comment       0x0000000000000000       0x2b obj/split.o
 .comment       0x0000000000000000       0x2b obj/setkb.o
 .comment       0x0000000000000000       0x2b obj/camino.o
 .comment       0x0000000000000000       0x2b obj/camino_ns.o
 .comment       0x0000000000000000       0x2b obj/atoi.o
 .comment       0x0000000000000000       0x2b obj/prodcons.o
 .comment       0x0000000000000000       0x2b obj/afilo.o
 .comment       0x0000000000000000       0x2b obj/divz.o
 .comment       0x0000000000000000       0x2b obj/multiterminal.o

.debug
 *(.debug)

.line
 *(.line)

.debug_srcinfo
 *(.debug_srcinfo)

.debug_sfnames
 *(.debug_sfnames)

.debug_aranges
 *(.debug_aranges)

.debug_pubnames
 *(.debug_pubnames)

.debug_info
 *(.debug_info .gnu.linkonce.wi.*)

.debug_abbrev
 *(.debug_abbrev)

.debug_line
 *(.debug_line)

.debug_frame
 *(.debug_frame)

.debug_str
 *(.debug_str)

.debug_loc
 *(.debug_loc)

.debug_macinfo
 *(.debug_macinfo)

.debug_weaknames
 *(.debug_weaknames)

.debug_funcnames
 *(.debug_funcnames)

.debug_typenames
 *(.debug_typenames)

.debug_varnames
 *(.debug_varnames)

.debug_pubtypes
 *(.debug_pubtypes)

.debug_ranges
 *(.debug_ranges)

.debug_macro
 *(.debug_macro)

.gnu.attributes
 *(.gnu.attributes)

/DISCARD/
 *(.note.GNU-stack)
 *(.gnu_debuglink)
 *(.gnu.lto_*)
OUTPUT(mtask elf32-i386)
